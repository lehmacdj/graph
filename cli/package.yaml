name:                graph
version:             0.1.0.0
github:              "lehmacdj/graph"
license:             BSD3
author:              "Devin Lehmacher"
maintainer:          "lehmacdj@gmail.com"
copyright:           "Copyright: (c) 2017 Devin Lehmacher"

extra-source-files:
- README.md
- ChangeLog.md

# Metadata used when publishing your package
# synopsis:            Short description of your package
# category:            Miscellaneous

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description:         Please see the README on GitHub at <https://github.com/lehmacdj/graph#readme>

dependencies:
- base >= 4.7 && < 5
- aeson
- attoparsec
- base64
- base64-bytestring
- bytestring
- classy-prelude
- comonad
- conduit
- conduit-extra
- containers
- deepseq
- directory
- directory-tree
- exceptions
- filepath
- foreign-store
- free
- generic-lens
- haskeline
- hspec-expectations
- inline-c
- inline-c-objc
- html-conduit
- http-conduit
- http-types
- lens
- megaparsec
- mono-traversable
- mtl
- optparse-applicative
- ordered-containers
- parser-combinators
- polysemy
- polysemy-plugin
- polysemy-readline
- polysemy-zoo
- random
- random-shuffle
- SHA
- temporary
- text
- time
- template-haskell
- transformers
- typed-process
- unix
- unliftio
- witherable
- wreq
- xdg-basedir
- xml-conduit
- Glob
# below are test dependencies which are collapsed into main dependencies due to
# God module structure
- hspec
- tasty
- tasty-hunit
- tasty-hspec
- tasty-discover
- tasty-golden
- tasty-quickcheck

default-extensions:
- BangPatterns
- BlockArguments
- CApiFFI
- ConstraintKinds
- DataKinds
- DefaultSignatures
- DeriveAnyClass
- DeriveFoldable
- DeriveFunctor
- DeriveGeneric
- DeriveTraversable
- DerivingStrategies
- DerivingVia
- DisambiguateRecordFields
- DuplicateRecordFields
- FlexibleContexts
- FlexibleInstances
- FunctionalDependencies
- GADTs
- GeneralizedNewtypeDeriving
- LambdaCase
- MultiParamTypeClasses
- NamedFieldPuns
- NoFieldSelectors
- NoImplicitPrelude
- OverloadedLabels
- OverloadedStrings
- OverloadedRecordDot
- PatternSynonyms
- PolyKinds
- QuasiQuotes
- RankNTypes
- RecordWildCards
- ScopedTypeVariables
- StandaloneDeriving
- StandaloneKindSignatures
- StrictData
- TupleSections
- TypeApplications
- TypeFamilies
- TypeOperators
- TypeSynonymInstances
- ViewPatterns

ghc-options:
- -Wall
- -fplugin=Polysemy.Plugin
- -flate-specialise
- -fspecialise-aggressively

library:
  source-dirs: src
  when:
    - condition: os(darwin)
      then:
        extra-libraries: [ objc ]
        frameworks: [ Foundation ]
        # this makes inline-c work in GHCi
        ghc-options: -fobject-code
      else:
        extra-libraries: []
        frameworks: []

executables:
  ge:
    main:                Main.hs
    source-dirs:         app/ge
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - graph

  dump-graph:
    main:                Main.hs
    source-dirs:         app/dump-graph
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - graph

  scratch:
    main:                Main.hs
    source-dirs:         app/scratch
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - graph

tests:
  graph-test:
    main:                Main.hs
    source-dirs:         test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    - -Wall
    dependencies:
    - graph
